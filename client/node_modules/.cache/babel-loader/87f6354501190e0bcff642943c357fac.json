{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clark\\\\desktop\\\\projects\\\\course-picker\\\\client\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useRef } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './Login.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = 'http://localhost:8080';\nconst loginURL = `${baseUrl}/login`;\n\nconst Login = () => {\n  _s();\n\n  const [isLoggedIn, setLogin] = useState(false);\n  const [isLoginError, setLoginError] = useState(false); // const [errorMessage, setErrorMessage]=useRef(null);\n\n  const login = event => {\n    event.preventDefault();\n\n    if (event.username.value === \"\" || event.password.value === \"\") {\n      setLoginError(true); // setErrorMessage(\"You must provide a username and password\");\n      // isLoginError: true,\n      // errorMessage: \"You must provide a username and password.\"\n\n      return;\n    }\n\n    axios.post(loginURL, {\n      username: event.username.value,\n      password: event.password.value\n    }).then(response => {\n      if (response.data.error) {\n        setLoginError(true); // setErrorMessage(response.data.error.message);\n        //   isLoginError: true,\n        //   errorMessage: response.data.error.message\n\n        return;\n      }\n\n      sessionStorage.setItem(\"authToken\", response.data.token);\n      setLogin(true);\n      setLoginError(false); // isLoggedIn: true,\n      // isLoginEroor: false\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const renderLogin = () => {\n    // const { isLoginError, errorMessage } = this.state\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"login__header\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), isLoginError && /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Incorrect Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        ref: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"form-label\",\n            htmlFor: \"username\",\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"Enter username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"form-label\",\n            htmlFor: \"password\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Enter Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this);\n  };\n\n  if (!isLoggedIn) return renderLogin();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Try again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/course-picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 49\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"qYKk1f8ntodKWDmcvBOVuhAz7Xs=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/clark/desktop/projects/course-picker/client/src/components/Login/Login.js"],"names":["axios","React","useState","useRef","Redirect","Link","Form","Button","baseUrl","loginURL","Login","isLoggedIn","setLogin","isLoginError","setLoginError","login","event","preventDefault","username","value","password","post","then","response","data","error","sessionStorage","setItem","token","catch","err","console","log","renderLogin","color"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React,{ useState, useRef } from 'react';\r\nimport { Redirect,Link } from 'react-router-dom';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './Login.scss';\r\nconst baseUrl = 'http://localhost:8080';\r\nconst loginURL = `${baseUrl}/login`;\r\n\r\nconst Login = () => {\r\n    const [isLoggedIn, setLogin]= useState(false);\r\n    const [isLoginError, setLoginError]=useState(false);\r\n    // const [errorMessage, setErrorMessage]=useRef(null);\r\n\r\n    const login = (event) =>{\r\n        event.preventDefault();\r\n        if(event.username.value === \"\" || event.password.value === \"\"){\r\n            setLoginError(true);\r\n            // setErrorMessage(\"You must provide a username and password\");\r\n            // isLoginError: true,\r\n            // errorMessage: \"You must provide a username and password.\"\r\n            return;\r\n        }\r\n    \r\n        axios.post(loginURL,{\r\n          username: event.username.value,\r\n          password: event.password.value\r\n        })\r\n        .then((response)=>{\r\n          if(response.data.error){\r\n            setLoginError(true);\r\n            // setErrorMessage(response.data.error.message);\r\n            //   isLoginError: true,\r\n            //   errorMessage: response.data.error.message\r\n            return;\r\n          }\r\n          sessionStorage.setItem(\"authToken\", response.data.token)\r\n          setLogin(true);\r\n          setLoginError(false);\r\n            // isLoggedIn: true,\r\n            // isLoginEroor: false\r\n        })\r\n        .catch((err)=>{\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    const renderLogin = () => {\r\n       // const { isLoginError, errorMessage } = this.state\r\n        return (\r\n\r\n          <div className=\"login\">\r\n            <header className=\"login__header\">Login</header>\r\n            {isLoginError && <label style={{color: 'red'}}>Incorrect Login</label>}\r\n\r\n            <Form ref=\"form\">\r\n              <Form.Group>\r\n                <Form.Label className='form-label' htmlFor=\"username\">Username: </Form.Label>\r\n                <Form.Control type='text' name='username' placeholder=\"Enter username\"/>\r\n              </Form.Group>  \r\n              <Form.Group>\r\n                <Form.Label className='form-label' htmlFor=\"password\">Password: </Form.Label>\r\n                <Form.Control type='password' name='password' placeholder=\"Enter Password\"/>\r\n              </Form.Group>\r\n              {/* <Button className='btn btn-primary' onClick={login()}>\r\n                Login\r\n              </Button> */}\r\n            </Form>\r\n          </div>\r\n        )\r\n      }\r\n      if(!isLoggedIn) return renderLogin();\r\n    return (\r\n        <div>\r\n            {!isLoggedIn ?<div>Try again</div>: <Redirect to=\"/course-picker\"/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}