{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clark\\\\desktop\\\\projects\\\\course-picker\\\\client\\\\src\\\\components\\\\Picker\\\\Picker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = 'http://localhost:8080';\nconst coursesURL = `${baseURL}/courses`;\n\nconst Picker = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const token = sessionStorage.getItem(\"authToken\");\n      const result = await axios.get(coursesURL, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(result);\n      setData(result.data);\n      console.log(data);\n    };\n\n    fetchData();\n  }, []);\n  let token = sessionStorage.getItem(\"authToken\");\n  return !token ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 18\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"This page will have the random course generator. I want it to display stats on the side. The last 3 courses picked. Have an accept/reject button. on accept confirms it goes to list(count up and last date selected). On reject spin again. Once Course is selected, Modal for the accept or reject.\", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/courses\",\n      children: \"Course List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.courses.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.course\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Picker, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Picker;\nexport default Picker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Picker\");","map":{"version":3,"sources":["C:/Users/clark/desktop/projects/course-picker/client/src/components/Picker/Picker.js"],"names":["React","useEffect","useState","Link","Redirect","axios","baseURL","coursesURL","Picker","data","setData","fetchData","token","sessionStorage","getItem","result","get","headers","Authorization","console","log","courses","map","item","course"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AACA,MAAMC,UAAU,GAAE,GAAED,OAAQ,UAA5B;;AAEA,MAAME,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,SAAS,GAAE,YAAW;AACxB,YAAMC,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAd;AACA,YAAMC,MAAM,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUT,UAAV,EAAqB;AACtCU,QAAAA,OAAO,EAAC;AACJC,UAAAA,aAAa,EAAG,UAASN,KAAM;AAD3B;AAD8B,OAArB,CAArB;AAKAO,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACIL,MAAAA,OAAO,CAACK,MAAM,CAACN,IAAR,CAAP;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACP,KAVD;;AAWAE,IAAAA,SAAS;AACZ,GAbQ,EAaP,EAbO,CAAT;AAeA,MAAIC,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAZ;AACA,SACI,CAACF,KAAD,gBAAS,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAT,gBACA;AAAA,qUAMI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,gBACKH,IAAI,CAACY,OAAL,CAAaC,GAAb,CAAiBC,IAAI,iBAClB;AAAA,kBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBH,CApCD;;GAAMhB,M;;KAAAA,M;AAsCN,eAAeA,MAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst baseURL = 'http://localhost:8080';\r\nconst coursesURL=`${baseURL}/courses`;\r\n\r\nconst Picker = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData= async () =>{\r\n            const token = sessionStorage.getItem(\"authToken\");\r\n            const result = await axios.get(coursesURL,{\r\n                headers:{\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            })\r\n            console.log(result);\r\n                setData(result.data);\r\n                console.log(data);\r\n        };\r\n        fetchData();\r\n    },[])\r\n\r\n    let token = sessionStorage.getItem(\"authToken\");\r\n    return (\r\n        !token ? <Redirect to=\"/login\"/> : \r\n        <div>\r\n            This page will have the random course generator.\r\n            I want it to display stats on the side.\r\n            The last 3 courses picked.\r\n            Have an accept/reject button. on accept confirms it goes to list(count up and last date selected). On reject spin again.\r\n            Once Course is selected, Modal for the accept or reject.\r\n            <Link to=\"/courses\">Course List</Link>\r\n            <ul>\r\n                {data.courses.map(item=>(\r\n                    <li>{item.course}</li>\r\n                ))}\r\n            </ul>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Picker;"]},"metadata":{},"sourceType":"module"}