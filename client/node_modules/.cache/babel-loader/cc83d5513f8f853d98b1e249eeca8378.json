{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clark\\\\desktop\\\\projects\\\\course-picker\\\\client\\\\src\\\\components\\\\Picker\\\\Picker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport CourseResultModal from '../CourseResultModal/CourseResultModal.js';\nimport useModal from '../../customHooks/useModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = 'http://localhost:8080';\nconst coursesURL = `${baseURL}/courses`;\n\nconst Picker = () => {\n  _s();\n\n  const [data, setCourses] = useState([]);\n  const {\n    isShowing,\n    toggle\n  } = useModal();\n  const [randomCourse, setRandomCourse] = useState(\"\");\n  useEffect(() => {\n    const token = sessionStorage.getItem(\"authToken\");\n    axios.get(coursesURL, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      console.log(response.data);\n      setCourses(response.data);\n    });\n  }, []);\n  let token = sessionStorage.getItem(\"authToken\");\n  return !token ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 18\n  }, this) : !data ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 52\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"This page will have the random course generator. I want it to display stats on the side. The last 3 courses picked. Once Course is selected, Modal for the accept or reject.\", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/courses\",\n      children: \"Course List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggle,\n      children: \"Pick a Random Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.course\n      }, uuidv4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CourseResultModal, {\n      isShowing: isShowing,\n      hide: toggle,\n      randomCourse: randomCourse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Picker, \"EqVyX+pb+kFlkVi7EK6p/ViJkys=\", false, function () {\n  return [useModal];\n});\n\n_c = Picker;\nexport default Picker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Picker\");","map":{"version":3,"sources":["C:/Users/clark/desktop/projects/course-picker/client/src/components/Picker/Picker.js"],"names":["React","useEffect","useState","Link","Redirect","axios","v4","uuidv4","CourseResultModal","useModal","baseURL","coursesURL","Picker","data","setCourses","isShowing","toggle","randomCourse","setRandomCourse","token","sessionStorage","getItem","get","headers","Authorization","then","response","console","log","map","item","course"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA4B,MAA5B;AACA,OAAOC,iBAAP,MAA8B,2CAA9B;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AACA,MAAMC,UAAU,GAAE,GAAED,OAAQ,UAA5B;;AAEA,MAAME,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBZ,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM;AAACa,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAAsBP,QAAQ,EAApC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMkB,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAd;AACAhB,IAAAA,KAAK,CAACiB,GAAN,CAAUX,UAAV,EAAqB;AACjBY,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAAG,UAASL,KAAM;AAD3B;AADS,KAArB,EAKCM,IALD,CAKOC,QAAD,IAAY;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACb,IAArB;AACAC,MAAAA,UAAU,CAACY,QAAQ,CAACb,IAAV,CAAV;AACH,KARD;AASH,GAXQ,EAWP,EAXO,CAAT;AAcA,MAAIM,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAZ;AACA,SACI,CAACF,KAAD,gBAAS,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAT,GAAmC,CAACN,IAAD,gBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR,gBACnC;AAAA,4MAKI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAQ,MAAA,OAAO,EAAEG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,gBACKH,IAAI,CAACgB,GAAL,CAASC,IAAI,iBACV;AAAA,kBAAoBA,IAAI,CAACC;AAAzB,SAASxB,MAAM,EAAf;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAPJ,eAYI,QAAC,iBAAD;AACI,MAAA,SAAS,EAAEQ,SADf;AAEI,MAAA,IAAI,EAAEC,MAFV;AAGI,MAAA,YAAY,EAAEC;AAHlB;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAqBH,CAzCD;;GAAML,M;UAE0BH,Q;;;KAF1BG,M;AA2CN,eAAeA,MAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from'uuid';\r\nimport CourseResultModal from '../CourseResultModal/CourseResultModal.js';\r\nimport useModal from '../../customHooks/useModal';\r\n\r\nconst baseURL = 'http://localhost:8080';\r\nconst coursesURL=`${baseURL}/courses`;\r\n\r\nconst Picker = () => {\r\n    const [data, setCourses] = useState([]);\r\n    const {isShowing, toggle} = useModal();\r\n    const [randomCourse, setRandomCourse] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        const token = sessionStorage.getItem(\"authToken\");\r\n        axios.get(coursesURL,{\r\n            headers:{\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then((response)=>{\r\n            console.log(response.data);\r\n            setCourses(response.data);\r\n        })\r\n    },[])\r\n\r\n\r\n    let token = sessionStorage.getItem(\"authToken\");\r\n    return (\r\n        !token ? <Redirect to=\"/login\"/> : !data ? <div>loading...</div> :\r\n        <div>\r\n            This page will have the random course generator.\r\n            I want it to display stats on the side.\r\n            The last 3 courses picked.\r\n            Once Course is selected, Modal for the accept or reject.\r\n            <Link to=\"/courses\">Course List</Link>\r\n            <button onClick={toggle}>Pick a Random Course</button>\r\n            <ul>\r\n                {data.map(item=>(\r\n                    <li key={uuidv4()}>{item.course}</li>\r\n                ))}\r\n            </ul>\r\n            <CourseResultModal\r\n                isShowing={isShowing}\r\n                hide={toggle}\r\n                randomCourse={randomCourse}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Picker;"]},"metadata":{},"sourceType":"module"}