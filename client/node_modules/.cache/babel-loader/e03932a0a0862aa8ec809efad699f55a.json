{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clark\\\\desktop\\\\projects\\\\course-picker\\\\client\\\\src\\\\components\\\\Login\\\\Login.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './Login.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = 'http://localhost:8080';\nconst loginURL = `${baseUrl}/login`;\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoggedIn: false,\n      isLoginError: false,\n      errorMessage: ''\n    };\n\n    this.login = event => {\n      event.preventDefault();\n      const {\n        username,\n        password\n      } = this.loginForm;\n\n      if (username.value === \"\" || password.value === \"\") {\n        this.setState({\n          isLoginError: true,\n          errorMessage: \"You must provide a username and password.\"\n        });\n        return;\n      }\n\n      axios.post(loginURL, {\n        username: username.value,\n        password: password.value\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.error) {\n          this.setState({\n            isLoginError: true,\n            errorMessage: response.data.error.message\n          });\n          return;\n        }\n\n        sessionStorage.setItem(\"authToken\", response.data.token);\n        this.setState({\n          isLoggedIn: true,\n          isLoginEroor: false\n        });\n        console.log(sessionStorage.setItem(\"authToken\", response.data.token));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.renderLogin = () => {\n      const {\n        isLoginError,\n        errorMessage\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"login__header\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), isLoginError && /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            color: 'red'\n          },\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          ref: form => this.loginForm = form,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"form-label\",\n              htmlFor: \"username\",\n              children: \"username: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"username\",\n              placeholder: \"Enter user name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"form-label\",\n              htmlFor: \"password\",\n              children: \"Password: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Enter Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-primary\",\n            onClick: this.login,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"login__links\",\n          to: \"/register\",\n          children: \"Need to register?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this);\n    };\n  }\n\n  render() {\n    const {\n      isLoggedIn\n    } = this.state;\n    if (!isLoggedIn) return this.renderLogin();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/course-picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/clark/desktop/projects/course-picker/client/src/components/Login/Login.js"],"names":["React","Component","axios","Redirect","Link","Form","Button","baseUrl","loginURL","Login","state","isLoggedIn","isLoginError","errorMessage","login","event","preventDefault","username","password","loginForm","value","setState","post","then","response","console","log","data","error","message","sessionStorage","setItem","token","isLoginEroor","catch","err","renderLogin","color","form","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport { Redirect,Link } from 'react-router-dom';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './Login.scss';\r\nconst baseUrl = 'http://localhost:8080'\r\nconst loginURL = `${baseUrl}/login`\r\n\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        isLoggedIn: false,\r\n        isLoginError: false,\r\n        errorMessage: ''\r\n      }\r\n\r\n    login = (event) =>{\r\n        event.preventDefault();\r\n        const { username, password } = this.loginForm;\r\n    \r\n        if(username.value === \"\" || password.value === \"\"){\r\n          this.setState({\r\n            isLoginError: true,\r\n            errorMessage: \"You must provide a username and password.\"\r\n          })\r\n          return;\r\n        }\r\n    \r\n        axios.post(loginURL,{\r\n          username: username.value,\r\n          password: password.value\r\n        })\r\n        .then((response)=>{\r\n            console.log(response);\r\n          if(response.data.error){\r\n            this.setState({\r\n              isLoginError: true,\r\n              errorMessage: response.data.error.message\r\n            })\r\n            return;\r\n          }\r\n          sessionStorage.setItem(\"authToken\", response.data.token)\r\n          this.setState({\r\n            isLoggedIn: true,\r\n            isLoginEroor: false\r\n          });\r\n          console.log(sessionStorage.setItem(\"authToken\", response.data.token));\r\n        })\r\n        .catch((err)=>{\r\n          console.log(err);\r\n        });\r\n      }\r\n\r\n    renderLogin = () => {\r\n        const { isLoginError, errorMessage } = this.state\r\n        return (\r\n\r\n          <div className=\"login\">\r\n            <header className=\"login__header\">Login</header>\r\n            {isLoginError && <label style={{color: 'red'}}>{errorMessage}</label>}\r\n\r\n            <Form ref={form => (this.loginForm = form)}>\r\n              <Form.Group>\r\n                <Form.Label className='form-label' htmlFor=\"username\">username: </Form.Label>\r\n                <Form.Control type='text' name='username' placeholder=\"Enter user name\"/>\r\n              </Form.Group>  \r\n              <Form.Group>\r\n                <Form.Label className='form-label' htmlFor=\"password\">Password: </Form.Label>\r\n                <Form.Control type='password' name='password' placeholder=\"Enter Password\"/>\r\n              </Form.Group>\r\n              <Button className='btn btn-primary' onClick={this.login}>\r\n                Login\r\n              </Button>\r\n            </Form>\r\n          <Link className=\"login__links\" to=\"/register\">Need to register?</Link>\r\n          </div>\r\n        )\r\n      }\r\n\r\n\r\n\r\n    render() {\r\n        const { isLoggedIn } = this.state;\r\n       if(!isLoggedIn) return this.renderLogin();\r\n        return (\r\n            <div>\r\n                {!isLoggedIn ?<div>Try again</div>: <Redirect to=\"/course-picker\"/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}